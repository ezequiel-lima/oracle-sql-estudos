SELECT * FROM TABELA_DE_VENDEDORES tdv 

SELECT * FROM NOTAS_FISCAIS nf 

SELECT nf.MATRICULA, COUNT(*) FROM NOTAS_FISCAIS nf GROUP BY MATRICULA 

SELECT NF.MATRICULA, TDV.NOME, COUNT(*) 
FROM NOTAS_FISCAIS NF 
INNER JOIN TABELA_DE_VENDEDORES TDV 
ON NF.MATRICULA = TDV.MATRICULA /* critério de junção */
GROUP BY NF.MATRICULA, TDV.NOME;


/* quero que na resposta desta consulta apareça não somente o código do produto, mas também o nome do produto. Como fazer? */
SELECT CODIGO_DO_PRODUTO, SUM(QUANTIDADE) 
FROM ITENS_NOTAS_FISCAIS 
GROUP BY CODIGO_DO_PRODUTO 
HAVING SUM(QUANTIDADE) > 20000
ORDER BY SUM(QUANTIDADE) DESC;

/* verifiquei as tabelas */
SELECT * FROM ITENS_NOTAS_FISCAIS;
SELECT * FROM TABELA_DE_PRODUTOS;

/* em seguida montei a consulta usando INNER JOIN */
SELECT inf.CODIGO_DO_PRODUTO, tdp.NOME_DO_PRODUTO, SUM(inf.QUANTIDADE) 
FROM ITENS_NOTAS_FISCAIS inf 
INNER JOIN TABELA_DE_PRODUTOS tdp 
ON inf.CODIGO_DO_PRODUTO = tdp.CODIGO_DO_PRODUTO 
GROUP BY inf.CODIGO_DO_PRODUTO, tdp.NOME_DO_PRODUTO 
HAVING SUM(QUANTIDADE) > 20000
ORDER BY SUM(QUANTIDADE) DESC;


SELECT DISTINCT tdc.CPF AS "CPF DO CADASTRO", tdc.NOME, nf.CPF "CPF NOTAS FISCAIS" 
FROM TABELA_DE_CLIENTES tdc 
LEFT JOIN NOTAS_FISCAIS nf 
ON tdc.CPF = nf.CPF

SELECT DISTINCT tdc.CPF AS "CPF DO CADASTRO", tdc.NOME, nf.CPF "CPF NOTAS FISCAIS" 
FROM TABELA_DE_CLIENTES tdc 
LEFT JOIN NOTAS_FISCAIS nf 
ON tdc.CPF = nf.CPF
WHERE nf.CPF IS NULL /* eu pego todos os clientes que não tenha notas fiscais, utilizando NULL*/


SELECT DISTINCT tdv.NOME AS "Nome do Vendedor", tdv.BAIRRO AS "Bairro do Vendedor", tdc.NOME AS "Nome do cliente", tdc.BAIRRO AS "Bairro do Cliente"
FROM TABELA_DE_CLIENTES tdc 
FULL JOIN TABELA_DE_VENDEDORES tdv 
ON tdc.BAIRRO = tdv.BAIRRO 
WHERE tdc.BAIRRO IS NULL OR tdv.BAIRRO IS NULL
ORDER BY tdc.BAIRRO 

SELECT * FROM TABELA_DE_CLIENTES tdc 
SELECT * FROM TABELA_DE_VENDEDORES tdv 

/* UNION une o resultado de duas consultas */

SELECT * FROM TABELA_DE_CLIENTES tdc 
SELECT * FROM TABELA_DE_VENDEDORES tdv 

SELECT tdc.NOME FROM TABELA_DE_CLIENTES tdc UNION SELECT tdv.NOME FROM TABELA_DE_VENDEDORES tdv /* UNION também faz um DISTINCT por de baixo dos panos */

SELECT tdc.NOME FROM TABELA_DE_CLIENTES tdc UNION ALL SELECT tdv.NOME FROM TABELA_DE_VENDEDORES tdv /* Diferença UNION ALL NÃO USA O DISTINCT */

SELECT COUNT(DISTINCT tdc.BAIRRO) AS "Total De Bairros" FROM TABELA_DE_CLIENTES tdc; /* posso usar o DISTINCT no COUNT para contar a quantidade de bairros */
SELECT COUNT(DISTINCT tdv.BAIRRO) AS "Total De Bairros" FROM TABELA_DE_VENDEDORES tdv; 

SELECT COUNT(BAIRRO) AS "Total De Bairros"  /* contando a quantidade de bairros das duas tabelas */
FROM (
	SELECT tdc.BAIRRO 
	FROM TABELA_DE_CLIENTES tdc
	UNION
	SELECT tdv.BAIRRO 
	FROM TABELA_DE_VENDEDORES tdv
);

SELECT DISTINCT tdc.BAIRRO FROM TABELA_DE_CLIENTES tdc /* consulta os bairros das duas tabelas */
UNION
SELECT DISTINCT tdv.BAIRRO FROM TABELA_DE_VENDEDORES tdv; 

/* SubConsulta */

SELECT DISTINCT tdv.BAIRRO FROM TABELA_DE_VENDEDORES tdv 


/*consulta equivalente*/
SELECT tdc.* FROM TABELA_DE_CLIENTES tdc WHERE tdc.BAIRRO IN('Tijuca', 'Jardins', 'Copacabana', 'Santo Amaro')

SELECT tdc.* FROM TABELA_DE_CLIENTES tdc WHERE tdc.BAIRRO IN(SELECT DISTINCT tdv.BAIRRO FROM TABELA_DE_VENDEDORES tdv) /* essa é melhor pois não precisa de atualizacao */
/*consulta equivalente*/



SELECT DISTINCT tdp.SABOR FROM TABELA_DE_PRODUTOS tdp WHERE tdp.CODIGO_DO_PRODUTO IN (
SELECT INF.CODIGO_DO_PRODUTO FROM ITENS_NOTAS_FISCAIS INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) > 20000);



/*consulta equivalente*/
SELECT tdp.EMBALAGEM, SUM(tdp.PRECO_DE_LISTA) AS "Soma dos preços" 
FROM TABELA_DE_PRODUTOS tdp
HAVING SUM(tdp.PRECO_DE_LISTA) > 80
GROUP BY tdp.EMBALAGEM

SELECT tp.EMBALAGEM, tp.SOMA_PRECO
FROM (SELECT DISTINCT tdp.EMBALAGEM, SUM(tdp.PRECO_DE_LISTA) AS "SOMA_PRECO"
	FROM TABELA_DE_PRODUTOS tdp
	GROUP BY tdp.EMBALAGEM) tp
WHERE tp.SOMA_PRECO > 80;
/*consulta equivalente*/



/*consulta equivalente*/
SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) FROM ITENS_NOTAS_FISCAIS INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(INF.QUANTIDADE) > 20000 
ORDER BY SUM(INF.QUANTIDADE) DESC;

SELECT produtos.CODIGO_DO_PRODUTO, produtos.NOME_DO_PRODUTO, produtos.SOMA_QUANTIDADE 
	FROM (SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS "SOMA_QUANTIDADE" FROM ITENS_NOTAS_FISCAIS INF
	INNER JOIN TABELA_DE_PRODUTOS TP 
	ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
	GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO
	ORDER BY SUM(INF.QUANTIDADE) DESC) produtos
WHERE produtos.SOMA_QUANTIDADE > 20000;
/*consulta equivalente*/


/* VIEW */
/*ORIGINAL*/
SELECT produtos.CODIGO_DO_PRODUTO, produtos.NOME_DO_PRODUTO, produtos.SOMA_QUANTIDADE 
	FROM (SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS "SOMA_QUANTIDADE" FROM ITENS_NOTAS_FISCAIS INF
	INNER JOIN TABELA_DE_PRODUTOS TP 
	ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
	GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO
	ORDER BY SUM(INF.QUANTIDADE) DESC) produtos
WHERE produtos.SOMA_QUANTIDADE > 20000;

/*CRIACAO DA VIEW*/
CREATE VIEW VW_SOMA_QUANTIDADE AS
SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS "SOMA_QUANTIDADE" FROM ITENS_NOTAS_FISCAIS INF
INNER JOIN TABELA_DE_PRODUTOS TP 
ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO
ORDER BY SUM(INF.QUANTIDADE) DESC

/* MESMA CONSULTA UTILIZANDO A VIEW */
SELECT produtos.CODIGO_DO_PRODUTO, produtos.NOME_DO_PRODUTO, produtos.SOMA_QUANTIDADE 
FROM (VW_SOMA_QUANTIDADE) produtos
WHERE produtos.SOMA_QUANTIDADE > 20000;




