SELECT c.* FROM CLIENTE c;

SELECT CNPJ, SUBSTR(CNPJ, 1, 3) || '/' || SUBSTR(CNPJ, 4, 2) || '-' || SUBSTR(CNPJ, 6) AS "CNPJ FORMATADO" 
FROM CLIENTE;

CREATE OR REPLACE PROCEDURE FORMATA_CNPJ /* IN é usado para atribuir e OUT para receber*/
	(p_CNPJ IN CLIENTE.CNPJ%TYPE, 
	p_CNPJ_SAIDA OUT CLIENTE.CNPJ%TYPE) /* passagem de parametro por valor e por referencia */
IS
BEGIN
	p_CNPJ_SAIDA := SUBSTR(p_CNPJ, 1, 3) || '/' || SUBSTR(p_CNPJ, 4, 2) || '-' || SUBSTR(p_CNPJ, 6);
END;


DECLARE
	v_CNPJ CLIENTE.CNPJ%TYPE;
	v_CNPJ_SAIDA CLIENTE.CNPJ%TYPE;
BEGIN 
	v_CNPJ := '1234567890';
	v_CNPJ_SAIDA := '1234567890';
END;


create or replace PROCEDURE CALCULA_IMPOSTO
(p_ID IN produto_venda_exercicio.id%type, p_VALOR_IMPOSTO OUT FLOAT)
IS
   v_PRECO produto_venda_exercicio.preco%type;
   v_QUANTIDADE produto_venda_exercicio.quantidade%type;
   v_PERCENTUAL_IMPOSTO produto_venda_exercicio.percentual_imposto%type;
BEGIN
   SELECT PRECO, QUANTIDADE, PERCENTUAL_IMPOSTO INTO v_PRECO, v_QUANTIDADE, v_PERCENTUAL_IMPOSTO
   FROM PRODUTO_VENDA_EXERCICIO WHERE ID = p_ID;
   p_VALOR_IMPOSTO := (v_PRECO * v_QUANTIDADE) * (v_PERCENTUAL_IMPOSTO/100);
END;


CREATE OR REPLACE PROCEDURE FORMATA_CNPJ_SIMPLES
(p_CNPJ_SAIDA IN OUT cliente.cnpj%type) /* ela é ao mesmo tempo entrada e saida, ou seja com o nome diz IN e OUT*/
IS
BEGIN
    p_CNPJ_SAIDA := SUBSTR(p_CNPJ_SAIDA, 1,3) || '/' || SUBSTR(p_CNPJ_SAIDA, 4,2) || '-' || SUBSTR(p_CNPJ_SAIDA,6);
END;

/* testar a procedure */
DECLARE
    v_CNPJ cliente.cnpj%type := '1234567890'; 
BEGIN
    FORMATA_CNPJ_SIMPLES(v_CNPJ);  
    DBMS_OUTPUT.PUT_LINE('CNPJ Formatado: ' || v_CNPJ);
END;


CREATE OR REPLACE NONEDITIONABLE PROCEDURE incluir_cliente
(
    p_ID CLIENTE.ID%type,
    p_RAZAO CLIENTE.RAZAO_SOCIAL%type,
    p_CNPJ CLIENTE.CNPJ%type,
    p_SEGMENTO CLIENTE.SEGMERCADO_ID%type,
    p_FATURAMENTO CLIENTE.FATURAMENTO_PREVISTO%type
)
IS
    v_CATEGORIA CLIENTE.CATEGORIA%type;
    v_CNPJ CLIENTE.CNPJ%TYPE;
BEGIN
    v_CATEGORIA := categoria_cliente(p_FATURAMENTO);
    FORMATA_CNPJ(p_CNPJ, v_CNPJ);

    INSERT INTO CLIENTE
    VALUES
    (p_ID, p_RAZAO, v_CNPJ, p_SEGMENTO, SYSDATE, p_FATURAMENTO, v_CATEGORIA);
    COMMIT;
END;

BEGIN
	INCLUIR_CLIENTE (5, 'MERCEARIA XYZ', '999288292999', 1, 10000);
	INCLUIR_CLIENTE (6, 'FARMACIA ABC', '999277292999', 1, 10000);
	INCLUIR_CLIENTE (7, 'MERCADINHO QWE', '999266292999', 1, 10000);
	INCLUIR_CLIENTE (8, 'TAVERNA POI', '999244292999', 1, 10000);
	INCLUIR_CLIENTE (9, 'BAR 222', '999233292999', 1, 10000);
END;

SELECT c.* FROM CLIENTE c 

DECLARE
   v_PERCENTUAL FLOAT;
BEGIN
   CALCULA_IMPOSTO(2, v_PERCENTUAL);
   DBMS_OUTPUT.PUT_LINE(v_PERCENTUAL); 
END;


CREATE OR REPLACE PROCEDURE ATUALIZAR_SEG_MERCADO
(p_ID CLIENTE.ID%type, p_SEGMERCADO_ID CLIENTE.SEGMERCADO_ID%type)
IS
BEGIN
    UPDATE CLIENTE SET SEGMERCADO_ID = p_SEGMERCADO_ID WHERE ID = p_ID;
    COMMIT;
END;


SELECT * FROM SEGMERCADO 

BEGIN
	ATUALIZAR_SEG_MERCADO(1,3);
	ATUALIZAR_SEG_MERCADO(2,3);
	ATUALIZAR_SEG_MERCADO(3,3);
	ATUALIZAR_SEG_MERCADO(4,3);
END;


